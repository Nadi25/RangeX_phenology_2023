---
title: "RangeX_phenology_2023_data_cleaning"
author: "Nadine Arzt"
format: html
editor: visual
date: 26.02.2024
---

## RangeX phenology 2023 data cleaning

Phenology data has been collected from Mai to October 2023. The number of buds, flowers and infructescences has been monitored in the field every other week.

### Load library

```{r}
library(tidyr)
library(dplyr)
library(readxl)
library(readr)
library(conflicted)
library(janitor)
library(lubridate)
library(here)

conflict_prefer_all("dplyr", quiet = TRUE)
```

### Import data

```{r}
## use read_delim from reader package

phenology_low_raw <- read_excel(here("Data/RangeX_raw_phenology_low_2023.xlsx"),sheet = 2)
head(phenology_low_raw)
dput(colnames(phenology_low_raw))
str(phenology_low_raw)

phenology_high_raw <- read_excel(here("Data/RangeX_raw_phenology_high_2023.xlsx"), sheet = 2)
head(phenology_high_raw)
dput(colnames(phenology_high_raw))
glimpse(phenology_high_raw)
```

### Combine low and high site

```{r}
# combine low site and high site ----------------------------------------------
rangex_phenology_raw <- bind_rows(phenology_low_raw, phenology_high_raw)

head(rangex_phenology_raw)
str(rangex_phenology_raw)

length(rangex_phenology_raw)
dput(colnames(rangex_phenology_raw))

# check for rows that only have NAs
na_rows <- rangex_phenology_raw[rowSums(is.na(rangex_phenology_raw)) == ncol(rangex_phenology_raw), ]
na_rows
```

### Clean column names

```{r}
rangex_phenology_raw <- clean_names(rangex_phenology_raw)
colnames(rangex_phenology_raw)

## rename column names to match with RangeX metadata file
rangex_phenology_raw <- rangex_phenology_raw %>%
  rename("block_id_original" = "block_id",
         "plot_id_original" = "plot_id",
         "position_id_original" = "position_id")
```

### Replace NAs with 0

```{r}
rangex_phenology_raw <- rangex_phenology_raw %>%
  mutate_at(vars(number_buds, number_flowers, number_infructescences, seeds_collected), ~replace(., is.na(.), 0))
```

### Add metadata file for all countries

```{r}
## can't load metadata as xlsx file, too many warnings and not loading correct
metadata <- read.csv2(here("Data/RangeX_Metadata.csv"))
head(metadata)
colnames(metadata)

## clean column names
metadata <- clean_names(metadata)

## filter only NOR
metadata_NOR <- metadata %>%
  dplyr::filter(grepl('NOR', region))
head(metadata_NOR)
str(metadata_NOR)

```

### Merge metadata and phenology data

```{r}
## merge with phenology data set
rangex_phenology_raw <- left_join(rangex_phenology_raw, metadata,
                         by = c("region", "site", "block_id_original", "plot_id_original", "position_id_original", "species"))
```

### Combined treatment column

```{r}
rangex_phenology_raw$treatment <- paste(rangex_phenology_raw$site, rangex_phenology_raw$treat_warming, rangex_phenology_raw$treat_competition, sep = "_")

colnames(rangex_phenology_raw)
```

### Problems to fix

1.  For cennig, we only counted stems and not flowers. So this is different to the rest.

    --\> We know how many flowers we have per stem at peak season, when we did the demographic trait measurements.

2.  Cennig: can have more seeds collected then infructescences, because one stem has multiple flowers

3.  Seeds collected:

    --\> When seeds have been collected, they obviously can't be counted as infructescences anymore next time.

    --\> So we have to add the number of collected seeds to the number of infructescences for the next date.

    --\> If 3 seeds have been collected on 27.09.23, we have to add 3 to infructescences on 10.10.23

    --\> Can we specify that when the last seed has been collected, the next date does not get more seeds added to the infructescences? Because then the plant is completely done

### Fix seeds collected â€“\> clean data

```{r}
# Arrange the data by unique plant ID and date
rangex_phenology_clean <- rangex_phenology_raw %>%
  arrange(unique_plant_id, date) %>%
  group_by(unique_plant_id) %>%
  mutate(
    # Use cumsum to sum up seeds collected in previous dates
    cumsum_seeds_collected = cumsum(seeds_collected),
    # Adjust the number of infructescences by adding the cumsum of seeds collected
    number_infructescences_adj = number_infructescences + lag(cumsum_seeds_collected, default = 0)
  ) %>%
  ungroup()

```

### Save clean file

```{r}
# write_rds(rangex_phenology_clean, "Data/RangeX_clean_phenology_2023.rds")
# 
# saveRDS(rangex_phenology_clean, "Data/RangeX_clean_phenology_2023.rds")
```

```{r}
# write.csv(rangex_phenology_clean, here("Data/RangeX_clean_phenology_2023.csv"), row.names = FALSE)
# 
# ## read cleaned data
# rangex_raw_phenology <- read.csv(here("RangeX_raw_phenology_2023.csv"))
# rangex_raw_phenology
```
